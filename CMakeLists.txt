cmake_minimum_required(VERSION 2.6)

project(calc)

set(CMAKE_BUILD_TYPE RELEASE)
set(CMAKE_VERBOSE_MAKEFILE FALSE)
set(CMAKE_SKIP_RPATH TRUE)

#variable helpers
SET(WINDOWS FALSE)
IF ("${CMAKE_SYSTEM_NAME}" MATCHES "Windows")
    SET(WINDOWS TRUE)
ENDIF()

SET(LINUX FALSE)
IF ("${CMAKE_SYSTEM_NAME}" MATCHES "Linux")
    SET(LINUX TRUE)
ENDIF()

# Compiler flags
IF (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -std=c++11")
ENDIF()

IF (WINDOWS)
    ADD_DEFINITIONS(-DPLATFORM_WINDOWS -DPLATFORM=WINDOWS)
    ADD_DEFINITIONS( "-W3 -MP -D_CRT_SECURE_NO_WARNINGS -nologo /TP /EHsc" )
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
ELSE()
    ADD_DEFINITIONS(-DPLATFORM_LINUX -DPLATFORM=LINUX -D_LINUX -x c++)
ENDIF()

SET(PROC calc)

file(GLOB SRC "*.cc")

ADD_EXECUTABLE(${PROC} ${SRC})

if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    target_compile_definitions(${PROC} PUBLIC LINUX LINUX_64) 
endif()

set(INSTALL_DIR "${CMAKE_SOURCE_DIR}/bin")

if (${CMAKE_SYSTEM_NAME} MATCHES "Windows")
	install(TARGETS ${PROC} DESTINATION ${INSTALL_DIR})
else()
    install(TARGETS ${PROC} DESTINATION ${INSTALL_DIR})
endif()
